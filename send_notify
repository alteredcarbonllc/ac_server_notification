#!/bin/bash

export LANG=en_US.UTF-8

CONFIG_FILE="/etc/send_notify.conf"
SEND_NOTIFY_LOG_FILE="/var/log/send_notify.log"

check_config_file() {
    if [ ! -f "$CONFIG_FILE" ]; then
        local err="‚ùå [Git Auto Pull] –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–∏–π —Ñ–∞–π–ª $CONFIG_FILE –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ó–∞–≤–µ—Ä—à—É—î–º–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è."
        echo "$(date '+%F %T') [ERROR] $err" >> "$SEND_NOTIFY_LOG_FILE"
        echo "$err"
        exit 1
    fi
}

check_log_file() {
    if ! touch "$SEND_NOTIFY_LOG_FILE" 2>/dev/null; then
        local err="‚ùå [Git Auto Pull] –ù–µ–º–æ–∂–ª–∏–≤–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∞–±–æ –∑–∞–ø–∏—Å–∞—Ç–∏ –≤ –ª–æ–≥-—Ñ–∞–π–ª $SEND_NOTIFY_LOG_FILE"
        echo "$err"
        exit 1
    fi
}

parse_var_section() {
    local section=$(awk '/^\[var\]/ {flag=1; next} /^\[/ {flag=0} flag' "$CONFIG_FILE")
    while IFS='=' read -r key value; do
        key=$(echo "$key" | sed 's/^\$//; s/ //g')
        value=$(echo "$value" | sed 's/^\"\(.*\)\"$/\1/')
        export "$key=$value"
    done <<< "$section"
}

send_telegram() {
    curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" \
         -d chat_id="$CHAT_ID" \
         -d parse_mode="Markdown" \
         -d text="$1" > /dev/null
}

escape_for_signal() {
  local input="$1"
  # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –¥–≤–æ–π–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –∏ –æ–±—Ä–∞—Ç–Ω—ã–µ —Å–ª—ç—à–∏
  input="${input//\\/\\\\}"   # –æ–±—Ä–∞—Ç–Ω—ã–π —Å–ª—ç—à -> –¥–≤–æ–π–Ω–æ–π –æ–±—Ä–∞—Ç–Ω—ã–π —Å–ª—ç—à
  input="${input//\"/\\\"}"   
  echo "$input"
}
#"

send_signal() {
  local msg
  msg=$(escape_for_signal "$1")
  signal-cli -a "$SIGNAL_SENDER" send -m "$msg" "$SIGNAL_RECIPIENT" > /dev/null 2>&1
}

send_xmpp() {
    echo "$1" | sendxmpp -t $XMPP_RECIPIENT
#    -t \
#    -j $XMPP_JID \
#    -p $XMPP_PASSWORD \
#    $XMPP_RECIPIENT
}

send_message() {
    local base_message="$1"
    local date_message="$(date '+%F %T')"
    local message="[$date_message]"

    #if [[ -n "$PAM_USER" && -n "$PAM_RHOST" && -n "$PAM_TTY" ]]; then
    #    message+=" user=$PAM_USER from=$PAM_RHOST tty=$PAM_TTY üîê Login detected"
    #else
    #    message+=" $base_message"
    #fi
    message+=" $base_message"

    [[ "$SEND_TELEGRAM" == "1" ]] && send_telegram "$message"
    [[ "$SEND_SIGNAL" == "1" ]] && send_signal "$message"
    [[ "$SEND_XMPP" == "1" ]] && send_xmpp "$message"
}

handle_command_line() {
    if [[ $# -gt 0 ]]; then
        local msg="$*"
        echo "‚û° Sending a message: $msg"
        send_message "$msg"
        echo "$(date '+%F %T') [INFO] $msg" >> "$SEND_NOTIFY_LOG_FILE"
        exit 0
    fi

    # PAM mode
    if [[ -n "$PAM_USER" && -n "$PAM_SERVICE" && -n "$PAM_TYPE" ]]; then
        local action=""
        case "$PAM_TYPE" in
            open_session)
                action="–í—Ö—ñ–¥ –¥–æ –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É"
                ;;
            close_session)
                action="–í–∏—Ö—ñ–¥ –∑ –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É"
                ;;
            *)
                action="–ü–æ–¥—ñ—è $PAM_TYPE"
                ;;
        esac

        local msg="üîê $action –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ *$PAM_USER* —á–µ—Ä–µ–∑ *$PAM_SERVICE*"
        [[ -n "$PAM_RUSER" && "$PAM_RUSER" != "$PAM_USER" ]] && msg+=" –≤—ñ–¥ —ñ–º–µ–Ω—ñ *$PAM_RUSER*"
        [[ -n "$PAM_RHOST" ]] && msg+=" –∑ —Ö–æ—Å—Ç–∞ *$PAM_RHOST*"
        [[ -n "$PAM_TTY" ]] && msg+=" (—Ç–µ—Ä–º—ñ–Ω–∞–ª: *$PAM_TTY*)"

        echo "‚û° Sending PAM message: $msg"
        send_message "$msg"
        echo "$(date '+%F %T') [PAM] $msg" >> "$SEND_NOTIFY_LOG_FILE"
        exit 0
    fi

    # –û—à–∏–±–∫–∞, –µ—Å–ª–∏ –Ω–µ—Ç –Ω–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, –Ω–∏ PAM-–ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    $msg = "‚ùå Error: No message or PAM data provided."
    send_message "$msg"
    echo "$(date '+%F %T') [PAM] $msg" >> "$SEND_NOTIFY_LOG_FILE"
    exit 1
}

main() {
    check_config_file
    check_log_file
    parse_var_section
    handle_command_line "$@"
}

main "$@"
